name: Deploy static content to Pages

on:
  schedule:
    - cron: '0 0 * * *'

  push:
    branches: ["main"]

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Cache prior coverage data
        uses: actions/cache/restore@v4
        with:
          path: app/public/history
          key: coverage-data-v4

      - name: Build
        run: |
          git submodule update --recursive --init --remote --merge deno

          deno run --allow-all main.ts

          DATE=$(date -u +"%Y-%m-%dT%H:%M:%S.000Z")
          cp app/public/tests.json app/public/history/$DATE.json
          echo "$DATE" >> app/public/history/index.txt

          cd app
          npm install
          npm run build

      - name: Cleanup
        run: |
          gh extension install actions/gh-actions-cache
          
          REPO=${{ github.repository }}
          BRANCH=refs/pull/${{ github.event.pull_request.number }}/merge

          echo "Fetching list of cache key"
          cacheKeysForPR=$(gh actions-cache list -R $REPO -B $BRANCH | cut -f 1 )

          ## Setting this to not fail the workflow while deleting cache keys. 
          set +e
          echo "Deleting caches..."
          for cacheKey in $cacheKeysForPR
          do
              gh actions-cache delete $cacheKey -R $REPO -B $BRANCH --confirm
          done
          echo "Done"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update prior coverage data cache
        uses: actions/cache/save@v4
        with:
          path: app/public/history
          key: coverage-data-v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './app/build'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
